name: Deploy Laravel to Aruba (Mixed SSH + FTP) - Debug 403 Fix

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, curl, xml, bcmath, intl, zip

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install npm 10.9.0
        run: npm install -g npm@10.9.0

      - name: Install NPM dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Set permissions for Laravel folders
        run: |
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache

      - name: Create .env file for production
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
            sed -i 's/APP_ENV=local/APP_ENV=production/' .env
            sed -i 's/APP_DEBUG=true/APP_DEBUG=false/' .env
            echo "APP_KEY=" >> .env
          fi

      - name: Generate application key
        run: php artisan key:generate --no-interaction

      - name: Prepare index.php and .htaccess for Aruba public_html
        run: |
          mkdir -p public_html
          cp public/index.php public_html/index.php
          if [ -f public/.htaccess ]; then
            cp public/.htaccess public_html/.htaccess
          fi
          if [ -d public/images ]; then cp -r public/images public_html/; fi
          if [ -d public/css ]; then cp -r public/css public_html/; fi
          if [ -d public/js ]; then cp -r public/js public_html/; fi
          if [ -f public/favicon.ico ]; then cp public/favicon.ico public_html/; fi
          if [ -f public/robots.txt ]; then cp public/robots.txt public_html/; fi
          sed -i "s|__DIR__\.'/../vendor|__DIR__\.'/../vendor|g" public_html/index.php
          sed -i "s|__DIR__\.'/../bootstrap|__DIR__\.'/../bootstrap|g" public_html/index.php
          cat << 'EOF' > public_html/.htaccess
          <IfModule mod_rewrite.c>
              RewriteEngine On
              RedirectMatch 403 ^/(vendor|storage|bootstrap|routes|config|database|app)/
              <FilesMatch "\.(env|gitignore|gitattributes|lock|composer\.json|package\.json|md|xml|yml|yaml|log)$">
                  Order allow,deny
                  Deny from all
              </FilesMatch>
              AddType text/css .css
              AddType application/javascript .js
              AddType application/json .json
              AddType text/plain .map
              AddType image/svg+xml .svg
              <IfModule mod_expires.c>
                  ExpiresActive On
                  ExpiresByType text/css "access plus 1 month"
                  ExpiresByType application/javascript "access plus 1 month"
                  ExpiresByType image/png "access plus 1 month"
                  ExpiresByType image/jpg "access plus 1 month"
                  ExpiresByType image/jpeg "access plus 1 month"
                  ExpiresByType image/gif "access plus 1 month"
                  ExpiresByType image/svg+xml "access plus 1 month"
              </IfModule>
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule ^ index.php [L]
          </IfModule>
          EOF

      - name: Debug - Show file structure before upload
        run: |
          echo "=== STRUCTURE BEFORE UPLOAD ==="
          ls -la
          echo "=== PUBLIC_HTML CONTENT ==="
          ls -la public_html/
          echo "=== INDEX.PHP FIRST 15 LINES ==="
          head -15 public_html/index.php

      - name: Upload App Core via FTP (excluding public files)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          local-dir: ./
          server-dir: ${{ secrets.FTP_REMOTE_PATH }}
          exclude: |
            **/.git*/**
            **/node_modules/**
            **/tests*/**
            public/**
            public_html/**
            .env.example
            README.md
            package*.json
            vite.config.js
            tailwind.config.js

      - name: Upload public_html files via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          local-dir: ./public_html/
          server-dir: ${{ secrets.FTP_REMOTE_PATH }}/public_html/

      - name: Test SSH Connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "SSH connection successful!"
            echo "Current directory: $(pwd)"
            echo "User: $(whoami)"

      - name: Upload Vite build assets via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "public/build"
          target: "/web/htdocs/www.neoaveum.com/home/public_html/"
          strip_components: 1
          debug: true
          timeout: 30s
          command_timeout: 10m

      - name: Debug 403 Forbidden Error
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /web/htdocs/www.neoaveum.com/home
            echo "=== DEBUGGING 403 FORBIDDEN ==="
            echo "üìÅ Directory structure:"
            ls -la
            echo ""
            echo "üìÅ Public_html contents:"
            ls -la public_html/ || echo "‚ùå public_html directory not found!"
            echo ""
            echo "üîê Permissions check:"
            stat -c "Permissions: %a, Owner: %U:%G" public_html/ || echo "Cannot stat public_html"
            if [ -f public_html/index.php ]; then
              stat -c "index.php - Permissions: %a, Owner: %U:%G" public_html/index.php
            else
              echo "‚ùå index.php not found in public_html!"
            fi
            echo ""
            echo "‚öôÔ∏è .htaccess check:"
            if [ -f public_html/.htaccess ]; then
              echo "‚úÖ .htaccess exists"
              head -10 public_html/.htaccess
            else
              echo "‚ùå .htaccess not found!"
            fi
            echo ""
            echo "üåê Web server document root check:"
            echo "Current working directory: $(pwd)"
            echo "Expected document root should point to: $(pwd)/public_html"
            echo ""
            echo "üß™ Testing index.php directly:"
            if [ -f public_html/index.php ]; then
              cd public_html
              php -l index.php || echo "‚ùå PHP syntax error in index.php"
              echo ""
              echo "üìÑ First 20 lines of index.php:"
              head -20 index.php
            fi
            echo ""
            echo "üéØ Laravel core check:"
            cd /web/htdocs/www.neoaveum.com/home
            if [ -f artisan ]; then
              echo "‚úÖ Laravel artisan found"
              if [ -f .env ]; then
                echo "‚úÖ .env file exists"
              else
                echo "‚ùå .env file missing!"
              fi
              if [ -d vendor ]; then
                echo "‚úÖ vendor directory exists"
              else
                echo "‚ùå vendor directory missing!"
              fi
            else
              echo "‚ùå Laravel artisan not found - core files missing!"
            fi
            echo ""
            echo "üìã Error logs check:"
            if [ -f storage/logs/laravel.log ]; then
              echo "üìã Last 10 lines of Laravel log:"
              tail -10 storage/logs/laravel.log
            else
              echo "‚ÑπÔ∏è No Laravel logs found yet"
            fi
            echo "üè¢ Aruba hosting specific checks:"
            echo "Looking for error logs in common Aruba locations..."
            if [ -d ../logs ]; then
              echo "Found logs directory at ../logs"
              ls -la ../logs/ || echo "Cannot access logs directory"
            fi
            echo "‚úçÔ∏è Testing file creation permissions:"
            echo "<?php echo 'Test OK - $(date)'; ?>" > public_html/test.php
            if [ -f public_html/test.php ]; then
              echo "‚úÖ File creation successful"
              chmod 644 public_html/test.php
              echo "‚úÖ Permissions set to 644"
              echo "üåê Try accessing: https://www.neoaveum.com/test.php"
            else
              echo "‚ùå Cannot create test file"
            fi

      - name: Attempt 403 Fixes
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /web/htdocs/www.neoaveum.com/home
            echo "=== ATTEMPTING 403 FIXES ==="
            echo "üîß Fix 1: Checking Aruba document root structure..."
            cd /web/htdocs/www.neoaveum.com
            echo "Parent directory structure:"
            ls -la
            if [ ! -d public_html ] && [ -d home/public_html ]; then
              echo "Creating public_html symlink to home/public_html"
              ln -sf home/public_html public_html
            elif [ ! -d public_html ]; then
              echo "Creating public_html directory and copying content"
              cp -r home/public_html ./
            fi
            echo "üîß Fix 2: Checking and fixing PHP paths..."
            cd /web/htdocs/www.neoaveum.com/home
            if [ -f public_html/index.php ]; then
              cp public_html/index.php public_html/index.php.backup
              sed -i "s|require_once __DIR__\.'/../vendor/autoload\.php';|require_once __DIR__\.'/../vendor/autoload.php';|g" public_html/index.php
              sed -i "s|require_once __DIR__\.'/../bootstrap/app\.php';|require_once __DIR__\.'/../bootstrap/app.php';|g" public_html/index.php
              cat > public_html/index_test.php << 'TESTEOF'
            <?php
            echo "Current directory: " . __DIR__ . "\n<br>";
            echo "Parent directory: " . dirname(__DIR__) . "\n<br>";
            echo "Testing Laravel paths:\n<br>";
            $autoload_path = __DIR__ . '/../vendor/autoload.php';
            echo "Autoload path: $autoload_path - ";
            echo file_exists($autoload_path) ? "EXISTS" : "NOT FOUND";
            echo "\n<br>";
            $bootstrap_path = __DIR__ . '/../bootstrap/app.php';
            echo "Bootstrap path: $bootstrap_path - ";
            echo file_exists($bootstrap_path) ? "EXISTS" : "NOT FOUND";
            echo "\n<br>";
            if (file_exists($autoload_path)) {
              require_once $autoload_path;
              echo "‚úÖ Autoload included successfully\n<br>";
              if (file_exists($bootstrap_path)) {
                try {
                  $app = require_once $bootstrap_path;
                  echo "‚úÖ Laravel app bootstrapped successfully\n<br>";
                  echo "App instance: " . get_class($app) . "\n<br>";
                } catch (Exception $e) {
                  echo "‚ùå Bootstrap error: " . $e->getMessage() . "\n<br>";
                }
              }
            } else {
              echo "‚ùå Cannot include autoload\n<br>";
            }
            TESTEOF
              chmod 644 public_html/index_test.php
              echo "‚úÖ Created test file: https://www.neoaveum.com/index_test.php"
            fi
            echo "üîß Fix 3: Setting comprehensive permissions..."
            chmod -R 755 public_html/
            chmod 644 public_html/index.php
            chmod 644 public_html/.htaccess
            find public_html/ -type f -name "*.php" -exec chmod 644 {} \;
            find public_html/ -type f -name "*.css" -exec chmod 644 {} \;
            find public_html/ -type f -name "*.js" -exec chmod 644 {} \;
            echo "üîß Fix 4: Creating alternative .htaccess..."
            cat > public_html/.htaccess.simple << 'HTEOF'
            RewriteEngine On
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^ index.php [L]
            HTEOF
            echo "‚úÖ Alternative .htaccess created. If problems persist, rename .htaccess.simple to .htaccess"

      - name: Fix Document Root Issue
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== FIXING DOCUMENT ROOT ISSUE ==="
            cd /web/htdocs/www.neoaveum.com

            # Backup existing files if any
            if [ -f index.php ]; then
              echo "Backing up existing files..."
              mkdir -p backup_$(date +%Y%m%d_%H%M%S)
              mv *.php backup_$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || true
              mv *.html backup_$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || true
              mv .htaccess backup_$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || true
            fi

            # Copy all files from home/public_html to document root
            echo "Copying files to document root..."
            cp -r home/public_html/* ./

            # Fix the paths in index.php for new location
            echo "Fixing Laravel paths..."
            if [ -f index.php ]; then
              # Update paths to point to home directory
              sed -i "s|__DIR__\.'/../vendor|__DIR__.'/home/vendor|g" index.php
              sed -i "s|__DIR__\.'/../bootstrap|__DIR__.'/home/bootstrap|g" index.php
              sed -i "s|__DIR__\.'/../storage|__DIR__.'/home/storage|g" index.php

              echo "Updated index.php paths"
              echo "First 10 lines of updated index.php:"
              head -10 index.php
            fi

            # Set correct permissions
            chmod 644 index.php
            chmod 644 .htaccess
            chmod -R 755 build/ 2>/dev/null || true

            echo "‚úÖ Files copied to document root successfully"

      - name: Post-deploy operations via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /web/htdocs/www.neoaveum.com/home
            echo "=== POST-DEPLOY OPERATIONS ==="
            if [ -f composer.json ]; then
              composer install --no-dev --optimize-autoloader --no-interaction
            fi
            chmod -R 775 storage bootstrap/cache
            chmod -R 755 public_html/
            if [ -d public_html/build ]; then
              chmod -R 755 public_html/build
            fi
            if [ ! -f .env ]; then
              echo "WARNING: .env file not found!"
              if [ -f .env.example ]; then
                cp .env.example .env
                echo "Created .env from .env.example"
              fi
            fi
            echo "=== LARAVEL OPTIMIZATION ==="
            php artisan config:clear || echo "Config clear failed"
            php artisan cache:clear || echo "Cache clear failed"
            php artisan view:clear || echo "View clear failed"
            php artisan route:clear || echo "Route clear failed"
            php artisan config:cache || echo "Config cache failed - continuing anyway"
            php artisan route:cache || echo "Route cache failed - continuing anyway"
            php artisan view:cache || echo "View cache failed - continuing anyway"

      - name: Final Status Report
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARUBA_HOST }}
          username: ${{ secrets.ARUBA_USER }}
          port: ${{ secrets.ARUBA_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /web/htdocs/www.neoaveum.com/home
            echo "=== FINAL STATUS REPORT ==="
            echo ""
            echo "üåê URLs to test:"
            echo "   Main site: https://www.neoaveum.com"
            echo "   Test file: https://www.neoaveum.com/test.php"
            echo "   Debug file: https://www.neoaveum.com/index_test.php"
            echo ""
            echo "üìã Deployment Summary:"
            echo "   Laravel core: $([ -f artisan ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   Public HTML: $([ -d public_html ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   Index.php: $([ -f public_html/index.php ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   .htaccess: $([ -f public_html/.htaccess ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   .env file: $([ -f .env ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   Vendor dir: $([ -d vendor ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo "   Build assets: $([ -d public_html/build ] && echo "‚úÖ Present" || echo "‚ùå Missing")"
            echo ""
            if [ -f storage/logs/laravel.log ]; then
              echo "üìã Recent Laravel logs:"
              tail -5 storage/logs/laravel.log
            fi
            echo ""
            echo "üéØ Next steps if still getting 403:"
            echo "   1. Check the test URLs above"
            echo "   2. Contact Aruba support about document root configuration"
            echo "   3. Verify if .htaccess.simple works better"
            echo ""
            echo "üöÄ Deployment completed!"
